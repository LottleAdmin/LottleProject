//The Generate section of Lottle.
package lottle;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class Generate extends javax.swing.JFrame {

    //Declarations.
    ArrayList numbers;
    ArrayList numbersFinal;
    boolean moreLucky;
    boolean moreUnlucky;
    DefaultListModel DLM1;
    int index;
    int lucky;
    int unlucky;
    Random R1;

    //GUI generation method and initialisations.
    public Generate() {
        initComponents();
        numbers = new ArrayList<>();
        numbersFinal = new ArrayList<>(6);
        moreLucky = true;
        moreUnlucky = true;
        DLM1 = new DefaultListModel();
        index = 0;
        lucky = 0;
        unlucky = 0;
        R1 = new Random();
        DLM1.clear();
    }

    //Draw method that assigns lucky and unlucky numbers and returns random draw.
    public ArrayList draw() {
        moreLucky = true;
        moreUnlucky = true;
        for (int i = 0; i < 47; i++) {
            numbers.add(i, (i + 1));
        }

        //While loop for assigning lucky numbers.
        while (moreLucky == true) {
            try {
                lucky = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter a lucky number from 1-47"));
                if (lucky >= 1 && lucky <= 47 && !numbersFinal.contains(lucky)) {
                    numbersFinal.add(lucky);
                    numbers.remove(numbers.indexOf(lucky));
                } else if (lucky < 1 || lucky > 47 || numbersFinal.contains(lucky)) {
                    JOptionPane.showMessageDialog(null, "Invalid number for lucky number!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Invalid type for lucky number!");
            }
            if (JOptionPane.showConfirmDialog(null, "Do you have more lucky numbers?", "Input",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                moreLucky = true;
            } else {
                moreLucky = false;
            }
        }

        //While loop for assigning unlucky numbers.
        while (moreUnlucky == true) {
            try {
                unlucky = Integer.parseInt(JOptionPane.showInputDialog(null, "Enter an unlucky number from 1-47"));
                if (unlucky >= 1 && unlucky <= 47 && numbers.contains(unlucky)) {
                    numbers.remove(numbers.indexOf(unlucky));
                } else if (unlucky < 1 || unlucky > 47 || !numbers.contains(unlucky)) {
                    JOptionPane.showMessageDialog(null, "Invalid number for unlucky number!");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Invalid type for unlucky number!");
            }
            if (JOptionPane.showConfirmDialog(null, "Do you have more unlucky numbers?", "Input",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                moreUnlucky = true;
            } else {
                moreUnlucky = false;
            }
        }

        //While loop for randomising draw.
        while (numbersFinal.size() < 6) {
            index = R1.nextInt((numbers.size() - 1) - 0) + 0;
            numbersFinal.add(numbers.get(index));
            numbers.remove(numbers.get(index));
        }
        return numbersFinal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateLBL = new javax.swing.JLabel();
        drawBTN = new javax.swing.JButton();
        saveBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        numbersLST = new javax.swing.JList<>();
        mainmenuBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        generateLBL.setFont(new java.awt.Font("Courier New", 0, 36)); // NOI18N
        generateLBL.setText("Generate");

        drawBTN.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        drawBTN.setText("DRAW");
        drawBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawBTNActionPerformed(evt);
            }
        });

        saveBTN.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        saveBTN.setText("SAVE");

        numbersLST.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(numbersLST);

        mainmenuBTN.setFont(new java.awt.Font("Courier New", 0, 18)); // NOI18N
        mainmenuBTN.setText("MAIN MENU");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(drawBTN)
                            .addComponent(saveBTN)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(mainmenuBTN)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(generateLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(generateLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(drawBTN)
                .addGap(29, 29, 29)
                .addComponent(saveBTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(mainmenuBTN)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //Generate button method that calls draw() and outputs numberFinal on click.
    private void drawBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawBTNActionPerformed
        numbers.clear();
        numbersFinal.clear();
        draw();
        DLM1.addElement(new ArrayList<>(numbersFinal));
        this.numbersLST.setModel(DLM1);
    }//GEN-LAST:event_drawBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Generate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton drawBTN;
    private javax.swing.JLabel generateLBL;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mainmenuBTN;
    private javax.swing.JList<String> numbersLST;
    private javax.swing.JButton saveBTN;
    // End of variables declaration//GEN-END:variables
}
